name: Continuous Integration & Continuous Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run lint
        run: npm run lint

      - name: Run format check
        run: npm run format

      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: commitlint.config.ts
  
  deploy:
    name: Deploy to Vercel
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          node-modules-${{ runner.os }}-

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    - name: Set environment variables
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_URL_UNPOOLED: ${{ secrets.DATABASE_URL_UNPOOLED }}
        PGHOST: ${{ secrets.PGHOST }}
        PGHOST_UNPOOLED: ${{ secrets.PGHOST_UNPOOLED }}
        PGUSER: ${{ secrets.PGUSER }}
        PGDATABASE: ${{ secrets.PGDATABASE }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}

        POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
        POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
        POSTGRES_URL_NO_SSL: ${{ secrets.POSTGRES_URL_NO_SSL }}
        POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}

        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
        NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
        NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
        NEXT_PUBLIC_CLOUDINARY_API_KEY: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_API_KEY }}

      run: echo "Environment variables set."

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}